{"version":3,"file":"static/js/326.59386e11.chunk.js","mappings":"2MAAaA,EAAW,SAAAC,GAAK,OAAIA,EAAMC,MAAMA,KAAhB,EAChBC,EAAe,SAAAF,GAAK,OAAIA,EAAMC,MAAME,SAAhB,E,SCKpBC,EAAY,WACvB,IACQC,GADMC,EAAAA,EAAAA,IAAYP,GAClBM,MAER,OACE,iCACE,SAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,4BAGA,wBACGJ,GACCA,EAAMK,KAAI,SAAAC,GAAI,OACZ,yBACE,cAAGC,KAAMD,EAAKE,SAAd,SAAyBF,EAAKG,QADvBH,EAAKI,GADF,QAQvB,E,gFCdKC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GAAW,wBAAwBE,SAAS,sBAGxCC,EAAkB,WAC7B,IAAMC,GAAWC,EAAAA,EAAAA,MACXnB,GAAYG,EAAAA,EAAAA,IAAYJ,GACxBqB,GAAQC,EAAAA,EAAAA,KAERC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,IAETF,iBAAkBA,EAClBY,SAAU,SAAAC,GACR,IAAMC,EAAW,CACfA,SAAUD,EAAOX,OAEnBa,QAAQC,IAAIF,GACZT,GAASY,EAAAA,EAAAA,GAAcH,GACxB,IAGH,OACE,+BACE,UAACI,EAAA,EAAD,CACEzB,UAAU,OACVmB,SAAUH,EAAOU,aACjBC,GAAI,CACFC,IAAK,GAJT,WAOE,SAACC,EAAA,EAAD,CACEF,GAAI,CAAEG,aAAchB,EAAMiB,QAAQ,IAClCC,WAAS,EACT1B,GAAG,QACHD,KAAK,QACL4B,MAAM,4BACNC,MAAOlB,EAAOI,OAAOX,MACrB0B,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,QAAQ7B,OAAS8B,QAAQvB,EAAOwB,OAAO/B,OACrDgC,WAAYzB,EAAOsB,QAAQ7B,OAASO,EAAOwB,OAAO/B,SAEpD,SAACiC,EAAA,EAAD,CACEC,MAAM,UACN5C,QAAQ,YACRiC,WAAS,EACTY,KAAK,SACLjB,GAAI,CACFkB,SAAU,WACVC,gBAAiBpD,EAAY,iBAAcqD,EAC3CC,UAAWlC,EAAMiB,QAAQ,IAR7B,SAWGrC,GACC,SAACuD,EAAA,EAAD,CACEC,KAAM,GACNvB,GAAI,CACFkB,SAAU,WACVM,IAAK,MACLC,KAAM,MACNC,UAAW,QACXC,WAAY,QACZX,MAAO,2BAIX,eAMX,ECjED,EAde,WACb,OACE,+BACE,UAACY,EAAA,EAAD,YACE,SAACzD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKwD,IAAE,EAA1C,uCAGA,SAAC7C,EAAD,KACA,SAAChB,EAAD,QAIP,C","sources":["redux/repos/repos-selectors.js","components/ReposList/ReposList.jsx","components/ReposSearchForm/ReposSearchForm.jsx","pages/Search/Search.jsx"],"sourcesContent":["export const getRepos = state => state.repos.repos;\nexport const getIsLoading = state => state.repos.isLoading;\nexport const getError = state => state.repos.error;\n","import { Typography } from '@mui/material';\n\nimport { useSelector } from 'react-redux';\n\nimport { getRepos } from 'redux/repos/repos-selectors';\n\nexport const ReposList = () => {\n  const repos = useSelector(getRepos);\n  const { items } = repos;\n\n  return (\n    <>\n      <Typography variant=\"h3\" component=\"h2\">\n        List of repos\n      </Typography>\n      <ul>\n        {items &&\n          items.map(item => (\n            <li key={item.id}>\n              <a href={item.html_url}>{item.name}</a>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import { useTheme } from '@mui/material';\nimport { Box, Button, CircularProgress, TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getIsLoading } from 'redux/repos/repos-selectors';\nimport { fetchGetRepos } from 'redux/repos/repos-operations';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  query: yup.string('Enter Name to Search').required('Name is Required'),\n});\n\nexport const ReposSearchForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const theme = useTheme();\n\n  const formik = useFormik({\n    initialValues: {\n      query: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const repoName = {\n        repoName: values.query,\n      };\n      console.log(repoName);\n      dispatch(fetchGetRepos(repoName));\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          sx={{ marginBottom: theme.spacing(1) }}\n          fullWidth\n          id=\"query\"\n          name=\"query\"\n          label=\"What do you want to find?\"\n          value={formik.values.query}\n          onChange={formik.handleChange}\n          error={formik.touched.query && Boolean(formik.errors.query)}\n          helperText={formik.touched.query && formik.errors.query}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          sx={{\n            position: 'relative',\n            backgroundColor: isLoading ? 'lightgrey' : undefined,\n            minHeight: theme.spacing(6),\n          }}\n        >\n          {isLoading ? (\n            <CircularProgress\n              size={24}\n              sx={{\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                marginTop: '-12px',\n                marginLeft: '-12px',\n                color: 'rgba(255,255,255,0.5)',\n              }}\n            />\n          ) : (\n            'Submit'\n          )}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Container, Typography } from '@mui/material';\n\nimport { ReposList } from 'components/ReposList/ReposList';\nimport { ReposSearchForm } from 'components/ReposSearchForm/ReposSearchForm';\n\nconst Search = () => {\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h2\" component=\"h1\" mb>\n          Github Repo Search Page.\n        </Typography>\n        <ReposSearchForm />\n        <ReposList />\n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n"],"names":["getRepos","state","repos","getIsLoading","isLoading","ReposList","items","useSelector","Typography","variant","component","map","item","href","html_url","name","id","validationSchema","yup","query","required","ReposSearchForm","dispatch","useDispatch","theme","useTheme","formik","useFormik","initialValues","onSubmit","values","repoName","console","log","fetchGetRepos","Box","handleSubmit","sx","gap","TextField","marginBottom","spacing","fullWidth","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","color","type","position","backgroundColor","undefined","minHeight","CircularProgress","size","top","left","marginTop","marginLeft","Container","mb"],"sourceRoot":""}