{"version":3,"file":"static/js/848.4ee3a389.chunk.js","mappings":"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","sources":["redux/repos/repos-selectors.js","components/ReposList/RepoCard.jsx","components/ReposList/ReposList.jsx","components/ReposSearchForm/ReposSearchForm.jsx","pages/Search/Search.jsx"],"sourcesContent":["export const getRepos = state => state.repos.repos;\nexport const getIsLoading = state => state.repos.isLoading;\nexport const getError = state => state.repos.error;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const RepoCard = ({ item }) => {\n  const [isCardClicked, setIsCardClicked] = useState(true);\n\n  const handleCardClick = () => {\n    setIsCardClicked(!isCardClicked);\n  };\n\n  const handleLearnMoreClick = () => {\n    window.open(item.html_url, '_blank');\n  };\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardActionArea onClick={handleCardClick}>\n        <CardContent>\n          <Typography>Name: {item.name}</Typography>\n          <Typography>Created on {item.created_at}</Typography>\n          <Typography>Language: {item.language}</Typography>\n          <Typography\n            sx={{\n              textOverflow: isCardClicked ? 'ellipsis' : 'unset',\n              whiteSpace: isCardClicked ? 'nowrap' : 'unset',\n              overflow: isCardClicked ? 'hidden' : 'unset',\n            }}\n          >\n            Description: {item.description}\n          </Typography>\n          <Typography>Forks: {item.forks_count}</Typography>\n          <Typography>Watchers: {item.watchers}</Typography>\n          <Typography>Visibility: {item.visibility}</Typography>\n          {!isCardClicked && (\n            <Box sx={{ width: '40px' }}>\n              <img src={item.owner.avatar_url} alt=\"user_avatar\" width=\"100%\" />\n            </Box>\n          )}\n          <Box\n            component={Link}\n            to={item.owner.html_url}\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n            color=\"inherit\"\n          >\n            <Typography>Owner: {item.owner.login}</Typography>\n          </Box>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" onClick={handleLearnMoreClick} variant=\"outlined\">\n          Check It\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import { Grid, Typography } from '@mui/material';\n\nimport { useSelector } from 'react-redux';\n\nimport { getRepos } from 'redux/repos/repos-selectors';\nimport { RepoCard } from './RepoCard';\n\nexport const ReposList = () => {\n  const repos = useSelector(getRepos);\n  const { items } = repos;\n  console.log(items);\n\n  return (\n    <>\n      <Typography variant=\"h3\" component=\"h2\">\n        List of repos\n      </Typography>\n      <Grid container spacing={2}>\n        {items &&\n          items.map(item => (\n            <Grid item key={item.id} xs={12} sm={6} md={4}>\n              <RepoCard item={item} />\n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};\n","import { useTheme } from '@mui/material';\nimport { Box, Button, CircularProgress, TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getIsLoading } from 'redux/repos/repos-selectors';\nimport { fetchGetRepos } from 'redux/repos/repos-operations';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  query: yup.string('Enter Name to Search').required('Name is Required'),\n});\n\nexport const ReposSearchForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const theme = useTheme();\n\n  const formik = useFormik({\n    initialValues: {\n      query: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const repoName = {\n        repoName: values.query,\n      };\n      console.log(repoName);\n      dispatch(fetchGetRepos(repoName));\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          sx={{ marginBottom: theme.spacing(1) }}\n          fullWidth\n          id=\"query\"\n          name=\"query\"\n          label=\"What do you want to find?\"\n          value={formik.values.query}\n          onChange={formik.handleChange}\n          error={formik.touched.query && Boolean(formik.errors.query)}\n          helperText={formik.touched.query && formik.errors.query}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          sx={{\n            position: 'relative',\n            backgroundColor: isLoading ? 'lightgrey' : undefined,\n            minHeight: theme.spacing(6),\n          }}\n        >\n          {isLoading ? (\n            <CircularProgress\n              size={24}\n              sx={{\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                marginTop: '-12px',\n                marginLeft: '-12px',\n                color: 'rgba(255,255,255,0.5)',\n              }}\n            />\n          ) : (\n            'Submit'\n          )}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Container, Typography } from '@mui/material';\n\nimport { ReposList } from 'components/ReposList/ReposList';\nimport { ReposSearchForm } from 'components/ReposSearchForm/ReposSearchForm';\n\nconst Search = () => {\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h2\" component=\"h1\" mb>\n          Github Repo Search Page.\n        </Typography>\n        <ReposSearchForm />\n        <ReposList />\n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n"],"names":["getRepos","state","repos","getIsLoading","isLoading","RepoCard","item","useState","isCardClicked","setIsCardClicked","Card","sx","minWidth","CardActionArea","onClick","CardContent","Typography","name","created_at","language","textOverflow","whiteSpace","overflow","description","forks_count","watchers","visibility","Box","width","src","owner","avatar_url","alt","component","Link","to","html_url","target","rel","color","login","CardActions","Button","size","window","open","variant","ReposList","items","useSelector","console","log","Grid","container","spacing","map","xs","sm","md","id","validationSchema","yup","query","required","ReposSearchForm","dispatch","useDispatch","theme","useTheme","formik","useFormik","initialValues","onSubmit","values","repoName","fetchGetRepos","handleSubmit","gap","TextField","marginBottom","fullWidth","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","position","backgroundColor","undefined","minHeight","CircularProgress","top","left","marginTop","marginLeft","Container","mb"],"sourceRoot":""}