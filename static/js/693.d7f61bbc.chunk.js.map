{"version":3,"file":"static/js/693.d7f61bbc.chunk.js","mappings":"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","sources":["redux/repos/repos-selectors.js","components/ReposList/RepoCard.jsx","components/ReposList/ReposList.jsx","components/ReposPagination/ReposPagination.jsx","components/ReposSearchForm/ReposSearchForm.jsx","pages/Search/Search.jsx"],"sourcesContent":["export const getRepos = state => state.repos.repos;\nexport const getIsLoading = state => state.repos.isLoading;\nexport const getError = state => state.repos.error;\nexport const getSearchQuery = state => state.repos.searchQuery;\nexport const getPerPage = state => state.repos.perPage;\nexport const getSort = state => state.repos.sort;\nexport const getOrder = state => state.repos.order;\nexport const getLanguage = state => state.repos.language;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n} from '@mui/material';\n\nimport { Link } from 'react-router-dom';\n\nexport const RepoCard = ({ item }) => {\n  const [isCardClicked, setIsCardClicked] = useState(true);\n\n  const handleCardClick = () => {\n    setIsCardClicked(!isCardClicked);\n  };\n\n  const handleLearnMoreClick = () => {\n    window.open(item.html_url, '_blank');\n  };\n\n  const date = new Date(item.created_at);\n\n  const typographyStyle = {\n    textOverflow: isCardClicked ? 'ellipsis' : 'unset',\n    whiteSpace: isCardClicked ? 'nowrap' : 'unset',\n    overflow: isCardClicked ? 'hidden' : 'unset',\n  };\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardActionArea onClick={handleCardClick}>\n        <CardContent>\n          <Typography sx={typographyStyle}>\n            <b>Name:</b> {item.name}\n          </Typography>\n          <Divider />\n          <Typography sx={typographyStyle}>\n            <b>Updated on</b> {date.toLocaleString()}\n          </Typography>\n          <Divider />\n          <Typography sx={typographyStyle}>\n            <b>Language:</b> {item.language}\n          </Typography>\n          <Divider />\n          <Typography sx={typographyStyle}>\n            <b>Description:</b> {item.description}\n          </Typography>\n          <Divider />\n          <Typography sx={typographyStyle}>\n            <b>Forks:</b> {item.forks_count}\n          </Typography>\n          <Divider />\n          <Typography sx={typographyStyle}>\n            <b>Watchers:</b> {item.watchers}\n          </Typography>\n          <Divider />\n          <Typography sx={typographyStyle}>\n            <b>Visibility:</b> {item.visibility}\n          </Typography>\n          <Divider />\n          {!isCardClicked && (\n            <Box sx={{ width: '40px', height: '40px' }}>\n              <img\n                src={item.owner.avatar_url}\n                alt=\"user_avatar\"\n                width=\"100%\"\n                loading=\"lazy\"\n              />\n            </Box>\n          )}\n          <Box\n            component={Link}\n            to={item.owner.html_url}\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n            color=\"inherit\"\n          >\n            <Typography sx={typographyStyle}>\n              <b>Owner:</b> {item.owner.login}\n            </Typography>\n          </Box>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" onClick={handleLearnMoreClick} variant=\"outlined\">\n          Check It\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import { Grid, Typography } from '@mui/material';\n\nimport { useSelector } from 'react-redux';\n\nimport { getRepos } from 'redux/repos/repos-selectors';\nimport { RepoCard } from './RepoCard';\n\nexport const ReposList = () => {\n  const repos = useSelector(getRepos);\n  const { items, total_count } = repos;\n\n  return (\n    <>\n      {items && (\n        <Typography variant=\"h4\" component=\"h2\" mb>\n          List of repos: {total_count} in total.\n        </Typography>\n      )}\n      <Grid container spacing={2}>\n        {items &&\n          items.map(item => (\n            <Grid item key={item.id} xs={12} sm={6} md={4}>\n              <RepoCard item={item} />\n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Box, Pagination, useMediaQuery, useTheme } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchGetRepos } from 'redux/repos/repos-operations';\nimport {\n  getPerPage,\n  getRepos,\n  getSearchQuery,\n} from 'redux/repos/repos-selectors';\n\nexport const ReposPagination = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [numberOfPages, setNumberOfPages] = useState(0);\n\n  const searchQuery = useSelector(getSearchQuery);\n  const perPage = useSelector(getPerPage);\n  const repos = useSelector(getRepos);\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  useEffect(() => {\n    if (repos) {\n      const { total_count: numberOfRepos } = repos;\n      setNumberOfPages(Math.ceil(numberOfRepos / perPage));\n    }\n  }, [repos, perPage]);\n\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n    dispatch(\n      fetchGetRepos({ repoName: searchQuery, page: value, perPage: perPage })\n    );\n  };\n\n  return (\n    <>\n      {numberOfPages > 0 && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n          }}\n        >\n          <Pagination\n            count={numberOfPages}\n            variant=\"outlined\"\n            onChange={handlePageChange}\n            page={currentPage}\n            siblingCount={isMobile ? 0 : 1}\n          />\n        </Box>\n      )}\n    </>\n  );\n};\n","/* eslint-disable no-unused-vars */\nimport { useTheme } from '@mui/material';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport {\n  getIsLoading,\n  getLanguage,\n  getOrder,\n  getPerPage,\n  getSearchQuery,\n  getSort,\n} from 'redux/repos/repos-selectors';\nimport { fetchGetRepos } from 'redux/repos/repos-operations';\nimport {\n  setPerPage,\n  setSearchQuery,\n  setSort,\n  setOrder,\n  setLanguage,\n} from 'redux/repos/repos-slice';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  query: yup.string('Enter Name to Search').required('Name is Required'),\n  perPage: yup.number('Enter Repos per Page'),\n  language: yup.string('Enter Programming Language'),\n  sort: yup.string('Choose Sort Order'),\n  order: yup.string('Choose Order'),\n});\n\nexport const ReposSearchForm = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const [params, setParams] = useSearchParams();\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n\n  const isLoading = useSelector(getIsLoading);\n  const searchQuery = useSelector(getSearchQuery);\n  const perPage = useSelector(getPerPage);\n  const sort = useSelector(getSort);\n  const order = useSelector(getOrder);\n  const language = useSelector(getLanguage);\n\n  const formik = useFormik({\n    initialValues: {\n      query: searchQuery,\n      perPage: perPage,\n      language: language,\n      sort: sort,\n      order: order,\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const repoName = {\n        repoName: values.query,\n        perPage: values.perPage,\n        language: values.language,\n        sort: values.sort,\n        order: values.order,\n      };\n      dispatch(fetchGetRepos(repoName));\n      dispatch(setSearchQuery(values.query));\n      dispatch(setPerPage(values.perPage));\n      dispatch(setLanguage(values.language));\n      dispatch(setSort(values.sort));\n      dispatch(setOrder(values.order));\n\n      setParams({\n        repoName: values.query,\n        perPage: values.perPage,\n        language: values.language,\n        sort: values.sort,\n        order: values.order,\n      });\n    },\n  });\n\n  const handleToggleAdvancedOptions = () => {\n    setShowAdvancedOptions(!showAdvancedOptions);\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          sx={{ marginBottom: theme.spacing(1) }}\n          fullWidth\n          id=\"query\"\n          name=\"query\"\n          label=\"What do you want to find?\"\n          value={formik.values.query}\n          onChange={formik.handleChange}\n          error={formik.touched.query && Boolean(formik.errors.query)}\n          helperText={formik.touched.query && formik.errors.query}\n        />\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={handleToggleAdvancedOptions}\n          sx={{ marginBottom: theme.spacing(1) }}\n        >\n          {showAdvancedOptions\n            ? 'Hide advanced options'\n            : 'Show advanced options'}\n        </Button>\n        {showAdvancedOptions && (\n          <TextField\n            sx={{ marginBottom: theme.spacing(1) }}\n            fullWidth\n            id=\"perPage\"\n            name=\"perPage\"\n            label=\"Repos per Page\"\n            value={formik.values.perPage}\n            onChange={formik.handleChange}\n            error={formik.touched.perPage && Boolean(formik.errors.perPage)}\n            helperText={formik.touched.perPage && formik.errors.perPage}\n          />\n        )}\n        {showAdvancedOptions && (\n          <TextField\n            sx={{ marginBottom: theme.spacing(1) }}\n            fullWidth\n            id=\"language\"\n            name=\"language\"\n            label=\"Programming Language\"\n            value={formik.values.language}\n            onChange={formik.handleChange}\n            error={formik.touched.language && Boolean(formik.errors.language)}\n            helperText={formik.touched.language && formik.errors.language}\n          />\n        )}\n        {showAdvancedOptions && (\n          <FormControl fullWidth sx={{ marginBottom: theme.spacing(1) }}>\n            <InputLabel id=\"sort-label\">Sort Order</InputLabel>\n            <Select\n              labelId=\"sort-label\"\n              id=\"sort\"\n              name=\"sort\"\n              value={formik.values.sort}\n              onChange={formik.handleChange}\n              error={formik.touched.sort && Boolean(formik.errors.sort)}\n            >\n              <MenuItem value={'best-match'}>Best Match</MenuItem>\n              <MenuItem value={'stars'}>Stars</MenuItem>\n              <MenuItem value={'forks'}>Forks</MenuItem>\n              <MenuItem value={'updated'}>Updated</MenuItem>\n              <MenuItem value={'help-wanted-issues'}>\n                Help Wanted Issues\n              </MenuItem>\n            </Select>\n          </FormControl>\n        )}\n        {showAdvancedOptions && (\n          <FormControl fullWidth sx={{ marginBottom: theme.spacing(1) }}>\n            <InputLabel id=\"order-label\">Order</InputLabel>\n            <Select\n              labelId=\"order-label\"\n              id=\"order\"\n              name=\"order\"\n              value={formik.values.order}\n              onChange={formik.handleChange}\n              error={formik.touched.order && Boolean(formik.errors.order)}\n            >\n              <MenuItem value={'asc'}>Ascending</MenuItem>\n              <MenuItem value={'desc'}>Descending</MenuItem>\n            </Select>\n          </FormControl>\n        )}\n        <Button\n          fullWidth\n          sx={{ marginBottom: theme.spacing(1) }}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          {isLoading ? <CircularProgress size={24} /> : 'Search'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Container, Typography } from '@mui/material';\n\nimport { ReposList } from 'components/ReposList/ReposList';\nimport { ReposPagination } from 'components/ReposPagination/ReposPagination';\nimport { ReposSearchForm } from 'components/ReposSearchForm/ReposSearchForm';\n\nconst Search = () => {\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h2\" component=\"h1\" mb>\n          Repo Search Page\n        </Typography>\n        <ReposSearchForm />\n        <ReposList />\n        <ReposPagination />\n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n"],"names":["getRepos","state","repos","getIsLoading","isLoading","getSearchQuery","searchQuery","getPerPage","perPage","getSort","sort","getOrder","order","getLanguage","language","RepoCard","item","useState","isCardClicked","setIsCardClicked","date","Date","created_at","typographyStyle","textOverflow","whiteSpace","overflow","Card","sx","minWidth","CardActionArea","onClick","CardContent","Typography","name","Divider","toLocaleString","description","forks_count","watchers","visibility","Box","width","height","src","owner","avatar_url","alt","loading","component","Link","to","html_url","target","rel","color","login","CardActions","Button","size","window","open","variant","ReposList","useSelector","items","total_count","mb","Grid","container","spacing","map","xs","sm","md","id","ReposPagination","dispatch","useDispatch","theme","useTheme","currentPage","setCurrentPage","numberOfPages","setNumberOfPages","isMobile","useMediaQuery","breakpoints","down","useEffect","numberOfRepos","Math","ceil","display","justifyContent","marginTop","marginBottom","Pagination","count","onChange","event","value","fetchGetRepos","repoName","page","siblingCount","validationSchema","yup","query","required","ReposSearchForm","useSearchParams","setParams","showAdvancedOptions","setShowAdvancedOptions","formik","useFormik","initialValues","onSubmit","values","setSearchQuery","setPerPage","setLanguage","setSort","setOrder","handleSubmit","gap","TextField","fullWidth","label","handleChange","error","touched","Boolean","errors","helperText","FormControl","InputLabel","Select","labelId","MenuItem","disabled","type","CircularProgress","Container"],"sourceRoot":""}